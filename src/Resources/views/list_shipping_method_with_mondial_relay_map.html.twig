{% set mondialRelayShippingMethod = null %}
{% if app.request.locale|replace({'_':'-'}) in (['fr-FR', 'es-ES', 'nl-NL', 'en-GB']) %}
    {% set MrLocale = app.request.locale|replace({'_':'-'}) %}
{% else %}
    {% set MrLocale = null %}
{% endif %}

{% set mondialRelayShippingMethods = [] %}

<div class="ui segment">
    <div class="ui dividing header">{{ 'sylius.ui.shipment'|trans }} #{{ loop.index }}</div>
    <div class="ui fluid stackable items" {{ sylius_test_html_attribute('shipments') }}>
        {{ form_errors(form.method) }}

        {% for key, choice_form in form.method %}
            {% set fee = form.method.vars.shipping_costs[choice_form.vars.value] %}
            {% set shippingMethod = form.method.vars.choices[key].data %}

            {% if not (isMondialRelayShippingMethod(shippingMethod) and not isRequestLocaleAllowedForMondialRelay()) %}
                {% include '@SyliusShop/Checkout/SelectShipping/_choice.html.twig' with {'form': choice_form, 'method': shippingMethod, 'fee': fee} %}
            {% endif %}

            {% if isRequestLocaleAllowedForMondialRelay() and isMondialRelayShippingMethod(shippingMethod) %}
                {% set mondialRelayShippingMethods = mondialRelayShippingMethods|merge({ (shippingMethod.code) : shippingMethod }) %}
                <div class="mondial-relay-map" style="display: none;" data-mondial-relay-code="{{ shippingMethod.code }}"></div>
            {% endif %}
        {% else %}
            {% include '@SyliusShop/Checkout/SelectShipping/_unavailable.html.twig' %}
        {% endfor %}

        {% if mondialRelayShippingMethods[key]|default() is not null %}
            {{ form_row(form.mondialRelayParcelAddress, { attr: { style: "display:none" } }) }}
        {% endif %}
    </div>
</div>

{% if mondialRelayShippingMethods is not empty %}

    {{ form_widget(form.parcelPoint) }}

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script type="text/javascript" src="https://widget.mondialrelay.com/parcelshop-picker/jquery.plugin.mondialrelay.parcelshoppicker.js?{{ 'now'|date('U') }}"></script>

    {% set googleMapAlreadyAdded = false %}
    {% for key, method in mondialRelayShippingMethods %}
        {% set configuration = getMondialRelayConfiguration(method) %}

        {% set mapConfig = {
        'formAddressIdPrefix': form.vars.id ~ '_mondialRelayParcelAddress',
        'Target': '#' ~ form.parcelPoint.vars.id,
        'Brand': configuration.mondialRelayCode,
        'Country': configuration.language,
        'Responsive': configuration.responsive,
        'NbResults': configuration.nbMapResults,
        'PostCode': order.shippingAddress.postCode ?: '',
        'City': order.shippingAddress.city ?: '',
        'EnableGmap': configuration.isGoogleType(),
        'WidgetLanguage': MrLocale,
        } %}

        <div id="config-{{ method.code }}" data-config-value="{{ mapConfig|json_encode }}"></div>

        {% if configuration.isGoogleType() and not googleMapAlreadyAdded %}
            {# Adding Gmap api multiple times could cause issues #}
            {% set googleMapAlreadyAdded = true %}
            <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key={{ configuration.googleApiKey }}"></script>
        {% endif %}
    {% endfor %}

    <script>
        class WidgetManager {
            constructor() {
                this.widgets = new Map();
                this.checkboxEls = [];
            }

            init() {
                this.checkboxEls = document.querySelectorAll("#sylius-shipping-methods input[type='radio']");

                document.querySelectorAll('.mondial-relay-map').forEach((mapElement) => {
                    const mondialRelayCode = mapElement.dataset.mondialRelayCode;

                    const widget = new WidgetMap(mapElement);
                    widget.init();
                    widget.processInitialInput();
                    this.widgets.set(mondialRelayCode, widget);
                });

                this.initListeners();
            }

            initListeners() {
                this.checkboxEls.forEach((checkbox) => {
                    checkbox.addEventListener('change', (event) => {
                        this.hideWidgets();

                        if (event.target.checked === false) {
                            return;
                        }

                        const widget = this.widgets.get(checkbox.value);
                        if (widget === undefined) {
                            return;
                        }

                        widget.displayMap();
                        widget.canSubmitShipping();
                    });
                });
            }

            // Hide all widgets
            hideWidgets() {
                this.widgets.forEach((widget) => {
                    widget.hideMap();
                    widget.canSubmitShipping();
                });
            }
        }

        class WidgetMap {
            constructor(mapDiv) {
                this.$map = $(mapDiv);

                this.mondialRelayCode = this.$map.data('mondialRelayCode');
                this.config = JSON.parse(document.querySelector(`#config-${this.mondialRelayCode}`).dataset.configValue);
                this.submitField = document.querySelector(this.config.Target);
                this.checkboxEl = document.querySelector(`.checkbox [value='${this.mondialRelayCode}']`);
            }

            hideMap() {
                this.submitField.value = '';
                this.$map.hide();
            }

            displayMap() {
                this.$map.show();
                this.$map.trigger("MR_RebindMap"); // This re-draw the map
            }

            canSubmitShipping() {
                const nextPageButton = document.querySelector('#next-step');
                if (!this.isMondialRelaySelected()) {
                    nextPageButton.disabled =  false;
                    return;
                }

                // A mondial relay parcel point must be picked in order to submit shipping selection
                nextPageButton.disabled = !this.getParcelPointValue();
            }

            isMondialRelaySelected() {
                const inputChecked = this.getInputChecked();
                if (inputChecked === null) {
                    return false;
                }

                return inputChecked.value === this.mondialRelayCode;
            }

            getInputChecked() {
                return document.querySelector('form[name=sylius_checkout_select_shipping] .radio :checked');
            }

            processInitialInput() {
                if (this.isMondialRelaySelected()) {
                    this.displayMap();
                    this.canSubmitShipping();
                }
            }

            getParcelPointValue() {
                return document.querySelector(this.config.Target).value;
            }

            init() {
                setTimeout(() => {
                    this.$map.MR_ParcelShopPicker({
                        Target: this.config.Target,
                        Brand: this.config.Brand,
                        Country: this.config.Country,
                        Responsive: this.config.Responsive,
                        NbResults: this.config.NbResults,
                        PostCode: this.config.PostCode,
                        City: this.config.City,
                        EnableGmap: this.config.EnableGmap,
                        WidgetLanguage: this.config.WidgetLanguage,
                        OnParcelShopSelected: (pointSelected) => {
                            const mondialRelayForm = this.config.formAddressIdPrefix;
                            const $addressForm = $('form[name="sylius_checkout_select_shipping"] #' + mondialRelayForm);

                            $addressForm.find(`#${mondialRelayForm}_street`).val(pointSelected.Adresse1);
                            $addressForm.find(`#${mondialRelayForm}_postcode`).val(pointSelected.CP);
                            $addressForm.find(`#${mondialRelayForm}_company`).val(pointSelected.Nom);
                            $addressForm.find(`#${mondialRelayForm}_city`).val(pointSelected.Ville);

                            this.canSubmitShipping();
                        }
                    });
                }, 200);
            }
        }

        $(document).ready(function () {
            const widgetManager = new WidgetManager();
            widgetManager.init();
        });
    </script>
{% endif %}
