{% set mondialRelayShippingMethod = null %}

<div class="ui segment">
    <div class="ui dividing header">{{ 'sylius.ui.shipment'|trans }} #{{ loop.index }}</div>
    <div class="ui fluid stackable items" {{ sylius_test_html_attribute('shipments') }}>
        {{ form_errors(form.method) }}

        {% for key, choice_form in form.method %}
            {% set fee = form.method.vars.shipping_costs[choice_form.vars.value] %}
            {% set shippingMethod = form.method.vars.choices[key].data %}

            {% if not (isMondialRelayShippingMethod(shippingMethod) and not isRequestLocaleAllowedForMondialRelay()) %}
                {% include '@SyliusShop/Checkout/SelectShipping/_choice.html.twig' with {'form': choice_form, 'method': shippingMethod, 'fee': fee} %}
            {% endif %}

            {% if isRequestLocaleAllowedForMondialRelay() and isMondialRelayShippingMethod(shippingMethod) and mondialRelayShippingMethod is null %} {# only the first method is supported #}
                {% set mondialRelayShippingMethod = shippingMethod %}

                <div id="mondial-relay-map" style="display: none;"></div>
            {% endif %}
        {% else %}
            {% include '@SyliusShop/Checkout/SelectShipping/_unavailable.html.twig' %}
        {% endfor %}

        {% if mondialRelayShippingMethod is not null %}
            {{ form_row(form.mondialRelayParcelAddress, {
                attr: {
                    style: "display:none"
                }
            }) }}
        {% endif %}
    </div>
</div>

{% if mondialRelayShippingMethod is not null %}
    {% set configuration = getMondialRelayConfiguration(mondialRelayShippingMethod) %}

    {{ form_widget(form.parcelPoint) }}

    {% if configuration.isGoogleType() %}
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key={{ configuration.googleApiKey }}"></script>
    {% endif %}

    <script>
        {#
            Dynamic loading of corresponding scripts, jQuery is already loadded most part of the time
            therefore only mondial relay is load.
        #}
        const MONDIAL_RELAY_JQUERY_SCRIPT = 'https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js';
        const MONDIAL_RELAY_MAP_SCRIPT = 'https://widget.mondialrelay.com/parcelshop-picker/jquery.plugin.mondialrelay.parcelshoppicker.js';

        function showMondialRelayMap() {
            const $map = $('#mondial-relay-map');
            const $checkboxEls = $('.checkbox').filter(el => {
                const $radio = $(el).find('#sylius_checkout_select_shipping_shipments');

                return !!$radio;
            });

            const shipmentFormName = "{{ form.vars.id }}";
            const mondialRelayCode = "{{ mondialRelayShippingMethod.code }}";

            const $submitField = $('#{{ form.parcelPoint.vars.id }}');

            const getInputChecked = () => $('form[name="sylius_checkout_select_shipping"] .radio.checked').filter((idx, el) => $(el).hasClass('checked'));
            const getParcelPointValue = () => $('#{{ form.parcelPoint.vars.id }}').val();

            const isMondialRelaySelected = () => {
                const $inputChecked = getInputChecked();
                if ($inputChecked.length !== 1) {
                    return false;
                }

                const $inputHtml = $inputChecked.find('input');
                return $inputHtml.length === 1 && $inputHtml[0].value === mondialRelayCode;
            };

            const displayMap = () => {
                $map.show();
                $map.trigger("MR_RebindMap"); // This re-draw the map
            }

            const canSubmitShipping = () => {
                const $nextPageButton = $('#next-step');
                if (!isMondialRelaySelected()) {
                    $nextPageButton.prop('disabled', false);
                    return;
                }

                // A mondial relay parcel point must be picked in order to submit shipping selection
                $nextPageButton.prop('disabled', !getParcelPointValue());
            };

            const initialInputChecked = $('form[name="sylius_checkout_select_shipping"] .radio input:checked');

            if (initialInputChecked.length === 1 && initialInputChecked[0].value === mondialRelayCode) {
                displayMap();
                canSubmitShipping();
            }

            // This is fire when you click on the dot at left of the shipping method
            {# Notice: .checkbox() is part of semantic-ui #}
            $checkboxEls.checkbox({
                fireOnInit: true,
                onChecked: function() {
                    if ($(this).val() === mondialRelayCode) {
                        displayMap();
                    } else {
                        $submitField.val('');
                        $map.hide();
                    }
                    canSubmitShipping();
                },
            });

            // This is fire when you click on the label of the shipping method
            // Due to semantic ui broken logic this don't fire the "onChecked" previous event
            $('form[name="sylius_checkout_select_shipping"] .content a.header').click(function() {
                const $label = $(this);
                const $input = $label.closest('.item').find('input');
                const inputId = $input[0].id;
                const $items = $('.item .checkbox input');
                $items.each((index, item) => {
                    item = $(item);
                    if (item[0].id !== inputId) {
                        item.parent().removeClass('checked');
                    } else {
                        item.parent().addClass('checked');
                    }
                });

                // So there is some boiler code to ensure it also work when clicking on labels ...
                if (isMondialRelaySelected()) {
                    displayMap();
                } else {
                    $input.removeClass('checked');
                    $submitField.val('');
                    $map.hide();
                }

                canSubmitShipping();
            });

            $map.MR_ParcelShopPicker({
                Target: "#{{ form.parcelPoint.vars.id }}",
                Brand: "{{ configuration.mondialRelayCode }}",
                Country: "{{ configuration.language }}",
                Responsive: {{ configuration.responsive }},
                NbResults: {{ configuration.nbMapResults }},
                PostCode: "{{ order.shippingAddress.postCode ?: '' }}",
                City: "{{ order.shippingAddress.city ?: '' }}",
                EnableGmap: "{{ configuration.isGoogleType() }}",
                OnParcelShopSelected: (pointSelected) => {
                    const mondialRelayForm = shipmentFormName + '_mondialRelayParcelAddress';
                    const $addressForm = $('form[name="sylius_checkout_select_shipping"] #'+mondialRelayForm);

                    $addressForm.find(`#${mondialRelayForm}_street`).val(pointSelected.Adresse1);
                    $addressForm.find(`#${mondialRelayForm}_postcode`).val(pointSelected.CP);
                    $addressForm.find(`#${mondialRelayForm}_company`).val(pointSelected.Nom);
                    $addressForm.find(`#${mondialRelayForm}_city`).val(pointSelected.Ville);

                    canSubmitShipping();
                }
            });
        }

        function loadMondialRelay() {
            const mondialRelayScript = document.createElement("script");
            mondialRelayScript.setAttribute("src", MONDIAL_RELAY_MAP_SCRIPT);
            mondialRelayScript.addEventListener("load", () => {
                showMondialRelayMap();
            });
            document.head.appendChild(mondialRelayScript);
        }

        document.addEventListener("DOMContentLoaded",function () {
            if (typeof $ === 'undefined') {
                {#
                    Side note: loading jQuery here may lead to an issue bellow because we use the API of
                    semantic-ui... (`.checkbox()`)
                    A fix could be to use the standard events on checkboxes. Not changing it right now to ensure
                    compatibility with existing code.
                #}
                const jqueryScript = document.createElement("script");
                jqueryScript.setAttribute("src", MONDIAL_RELAY_JQUERY_SCRIPT);
                jqueryScript.addEventListener("load", () => {
                    loadMondialRelay();
                });
                document.head.appendChild(jqueryScript);
            } else {
                loadMondialRelay();
            }
        });
    </script>
{% endif %}
